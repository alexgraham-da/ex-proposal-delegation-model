{-# LANGUAGE ApplicativeDo #-}

module Setup where

import Daml.Script

import Templates

data LedgerParties = LedgerParties with
  public : Party
  companyA : Party
  companyB : Party
  employeeA1 : Party
  employeeA2 : Party
  employeeB1 : Party
  employeeB2 : Party
    deriving (Eq, Show)

initialize : LedgerParties -> Script ()
initialize = doSetup

setup : Script ()
setup = do
  public <- allocatePartyWithHint "Public" (PartyIdHint "Public")
  companyA <- allocatePartyWithHint "CompanyA" (PartyIdHint "CompanyA")
  companyB <- allocatePartyWithHint "CompanyB" (PartyIdHint "CompanyB")
  a1 <- allocatePartyWithHint "EmployeeA1" (PartyIdHint "EmployeeA1")
  a2 <- allocatePartyWithHint "EmployeeA2" (PartyIdHint "EmployeeA2")
  b1 <- allocatePartyWithHint "EmployeeB1" (PartyIdHint "EmployeeB1")
  b2 <- allocatePartyWithHint "EmployeeB2" (PartyIdHint "EmployeeB2")

  doSetup $ LedgerParties public companyA companyB a1 a2 b1 b2

doSetup : LedgerParties -> Script ()
doSetup (LedgerParties public companyA companyB a1 a2 b1 b2) = do

  let cA = Company with owner = companyA, name = "Company A", observers = [public] -- companyB, a1, a2, b1, b2]
  let cAInternal = CompanyInternal with company = cA, employees = [], management = []

  let cB = Company with owner = companyB, name = "Company B", observers = [public]
  let cbInternal = CompanyInternal with company = cB, employees = [], management = []

  caId <- submit companyA $ createCmd cA
  caInternalId <- submit companyA $ createCmd cAInternal
  caInternalId <- submit companyA $ exerciseCmd caInternalId CompanyInternal_AddEmployee with employee = a1, manager = False
  caInternalId <- submit companyA $ exerciseCmd caInternalId CompanyInternal_AddEmployee with employee = a2, manager = True

  cbId <- submit companyB $ createCmd cB
  cbInternalId <- submit companyB $ createCmd cbInternal
  cbInternalId <- submit companyB $ exerciseCmd cbInternalId CompanyInternal_AddEmployee with employee = b1, manager = False
  cbInternalId <- submit companyB $ exerciseCmd cbInternalId CompanyInternal_AddEmployee with employee = b2, manager = True

  return ()
